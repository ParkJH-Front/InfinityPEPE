{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jae15\\\\Documents\\\\GitHub\\\\InfinityPEPE\\\\infinitypepe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ImgBox from \"./ImgBox\"; // 이미지 검색한 결과를 출력하는 순서\n// 1. 위치는 최상위 (props 활용을 위해)\n// 2. input 을 통해 사용자로부터 입력값을 받음 (value)\n// 3. onsubmit 이벤트 발생 시 API를 불러옴\n// 4. API URL 내 value를 통해 검색을 진행\n// 5. 검색한 결과를 리턴하여 h1 테그에 전달\n// 6. input 안에 있는 내용을 지워버림.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [word, setWord] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [rowData, setRowData] = useState([]);\n\n  const onChange = event => setWord(event.target.value);\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (word === \"\") {\n      return;\n    }\n\n    setSearch(word);\n    setWord(\"\");\n  };\n\n  useEffect(() => {\n    if (search === \"\") {\n      return;\n    }\n\n    const URL = `https://dapi.kakao.com/v2/search/image?query=${search}`;\n    fetch(URL, {\n      headers: {\n        Authorization: \"KakaoAK 17d6f89d24fa2565f0e7155dc37188f0\"\n      }\n    }).then(req => req.json()).then(data => {\n      // OBJ => ARR 변경(Objdct.values()) 데이터 다루는 아주 중요한 구문\n      setRowData(Object.values(data)[0].map(item => {\n        return item.image_url;\n      }));\n    }).catch();\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        value: word,\n        type: \"text\",\n        placeholder: \"Search Image~!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC80\\uC0C9\\uB41C \\uC774\\uBBF8\\uC9C0\\uAC00 \\uB098\\uC640\\uC57C\\uD574\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImgBox, {\n      imgURLArr: rowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QivRcedpMOGk8WnWNIX+VMc1tAY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ImgBox","App","word","setWord","search","setSearch","rowData","setRowData","onChange","event","target","value","onSubmit","preventDefault","URL","fetch","headers","Authorization","then","req","json","data","Object","values","map","item","image_url","catch"],"sources":["C:/Users/jae15/Documents/GitHub/InfinityPEPE/infinitypepe/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport ImgBox from \"./ImgBox\";\r\n\r\n// 이미지 검색한 결과를 출력하는 순서\r\n// 1. 위치는 최상위 (props 활용을 위해)\r\n// 2. input 을 통해 사용자로부터 입력값을 받음 (value)\r\n// 3. onsubmit 이벤트 발생 시 API를 불러옴\r\n// 4. API URL 내 value를 통해 검색을 진행\r\n// 5. 검색한 결과를 리턴하여 h1 테그에 전달\r\n// 6. input 안에 있는 내용을 지워버림.\r\n\r\nfunction App() {\r\n  const [word, setWord] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [rowData, setRowData] = useState([]);\r\n\r\n  const onChange = (event) => setWord(event.target.value);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (word === \"\") {\r\n      return;\r\n    }\r\n    setSearch(word);\r\n    setWord(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (search === \"\") {\r\n      return;\r\n    }\r\n\r\n    const URL = `https://dapi.kakao.com/v2/search/image?query=${search}`;\r\n    fetch(URL, {\r\n      headers: {\r\n        Authorization: \"KakaoAK 17d6f89d24fa2565f0e7155dc37188f0\",\r\n      },\r\n    })\r\n      .then((req) => req.json())\r\n      .then((data) => {\r\n        // OBJ => ARR 변경(Objdct.values()) 데이터 다루는 아주 중요한 구문\r\n        setRowData(\r\n          Object.values(data)[0].map((item) => {\r\n            return item.image_url;\r\n          })\r\n        );\r\n      })\r\n      .catch();\r\n  }, [search]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          value={word}\r\n          type=\"text\"\r\n          placeholder=\"Search Image~!\"\r\n        />\r\n      </form>\r\n      <h2>검색된 이미지가 나와야해</h2>\r\n      <ImgBox imgURLArr={rowData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMS,QAAQ,GAAIC,KAAD,IAAWN,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnC;;EAEA,MAAMC,QAAQ,GAAIH,KAAD,IAAW;IAC1BA,KAAK,CAACI,cAAN;;IACA,IAAIX,IAAI,KAAK,EAAb,EAAiB;MACf;IACD;;IACDG,SAAS,CAACH,IAAD,CAAT;IACAC,OAAO,CAAC,EAAD,CAAP;EACD,CAPD;;EASAL,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,KAAK,EAAf,EAAmB;MACjB;IACD;;IAED,MAAMU,GAAG,GAAI,gDAA+CV,MAAO,EAAnE;IACAW,KAAK,CAACD,GAAD,EAAM;MACTE,OAAO,EAAE;QACPC,aAAa,EAAE;MADR;IADA,CAAN,CAAL,CAKGC,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,EAMGF,IANH,CAMSG,IAAD,IAAU;MACd;MACAd,UAAU,CACRe,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,CAApB,EAAuBG,GAAvB,CAA4BC,IAAD,IAAU;QACnC,OAAOA,IAAI,CAACC,SAAZ;MACD,CAFD,CADQ,CAAV;IAKD,CAbH,EAcGC,KAdH;EAeD,CArBQ,EAqBN,CAACvB,MAAD,CArBM,CAAT;EAuBA,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEQ,QAAhB;MAAA,uBACE;QACE,QAAQ,EAAEJ,QADZ;QAEE,KAAK,EAAEN,IAFT;QAGE,IAAI,EAAC,MAHP;QAIE,WAAW,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eASE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAUE,QAAC,MAAD;MAAQ,SAAS,EAAEI;IAAnB;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GArDQL,G;;KAAAA,G;AAuDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}